<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{F7A8857C-E3DF-860D-8CCC-6C1078E2020F}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Gaia</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-windows-x86_64\Gaia\</OutDir>
    <IntDir>..\bin\Debug-windows-x86_64\Gaia\</IntDir>
    <TargetName>Gaia</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-windows-x86_64\Gaia\</OutDir>
    <IntDir>..\bin\Release-windows-x86_64\Gaia\</IntDir>
    <TargetName>Gaia</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>GAIA_PLATFORM_WINDOWS;GAIA_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\VulkanSDK\1.3.283.0\Include;..\thirdparty\Include;..\thirdparty\glfw-3.4.bin.WIN64\include;..\thirdparty\glm;..\thirdparty\stb;..\thirdparty\vma;..\thirdparty\tinyobjloader;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;glfw3dll.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:\VulkanSDK\1.3.283.0\Lib;..\thirdparty\glfw-3.4.bin.WIN64\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)src\assets\ (xcopy /Q /E /Y /I $(SolutionDir)src\assets $(TargetDir)assets &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)src\assets $(TargetDir)assets &gt; nul)
IF EXIST $(SolutionDir)src\compiledshaders\ (xcopy /Q /E /Y /I $(SolutionDir)src\compiledshaders $(TargetDir)compiledshaders &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)src\compiledshaders $(TargetDir)compiledshaders &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>GAIA_PLATFORM_WINDOWS;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\VulkanSDK\1.3.283.0\Include;..\thirdparty\Include;..\thirdparty\glfw-3.4.bin.WIN64\include;..\thirdparty\glm;..\thirdparty\stb;..\thirdparty\vma;..\thirdparty\tinyobjloader;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalOptions>/Ob0 %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <ExternalWarningLevel>Level3</ExternalWarningLevel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;glfw3dll.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:\VulkanSDK\1.3.283.0\Lib;..\thirdparty\glfw-3.4.bin.WIN64\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST $(SolutionDir)src\assets\ (xcopy /Q /E /Y /I $(SolutionDir)src\assets $(TargetDir)assets &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)src\assets $(TargetDir)assets &gt; nul)
IF EXIST $(SolutionDir)src\compiledshaders\ (xcopy /Q /E /Y /I $(SolutionDir)src\compiledshaders $(TargetDir)compiledshaders &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)src\compiledshaders $(TargetDir)compiledshaders &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Context.h" />
    <ClInclude Include="DeviceManager.h" />
    <ClInclude Include="HelloTriangle.h" />
    <ClInclude Include="SwapChainManager.h" />
    <ClInclude Include="VmaUsage.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Context.cpp" />
    <ClCompile Include="DeviceManager.cpp" />
    <ClCompile Include="HelloTriangle.cpp" />
    <ClCompile Include="SwapChainManager.cpp" />
    <ClCompile Include="VmaImpl.cpp" />
    <ClCompile Include="VmaUsage.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="stb.cpp" />
    <ClCompile Include="tinyobj.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="shaders\shader.frag" />
    <None Include="shaders\shader.vert" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>